setTimeout(() => {
    console.log('Loading...');
}, 300);
setTimeout(() => {
    console.log('Processing...');
}, 900);
setTimeout(() =>{
    console.log('[–í–ª–∞–¥–∏–º–∏—Ä] - bot activated!');
}, 1200);
const { VK } = require('vk-io');
const vk = new VK();
const commands = [];
const request = require('prequest');
let user = new VK();
const requests = require('request');
const fs = require("fs");
const rq = require("prequest");
const bot_owner = 181184435;
const {Keyboard} = require('vk-io');
let giving = false;
var wall_to_send = '';

let autos  = require('./autos.json')
let users = require('./users.json');
let buttons = [];

setInterval(async () => {
    await saveUsers();
    console.log('saved');
}, 5000); //30000

async function saveUsers()
{
    require('fs').writeFileSync('./autos.json', JSON.stringify(autos, null, '\t'));
    require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
    return true;
}


vk.setOptions({ token: '/', pollingGroupId: 181184435 });
const { updates, snippets } = vk;
updates.startPolling();
updates.on('message', async (message) => {
    if(Number(message.senderId) <= 0) return;
    if(/\[club181184435\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[club181184435\|(.*)\]/ig, '').trim();

    if(!users.find(x=> x.id === message.senderId))
    {
        const [user_info] = await vk.api.users.get({ user_id: message.senderId });
        const date = new Date();

        users.push({
            id: message.senderId,
            idtwo: message.Id,
            uid: users.length,
            admin: false,
            admreg: false,
            regDate: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`,
            ban: false,
            tag: user_info.first_name,
            employee1: false,
            employee2: false,
            employee3: false,
            employee4: false,
            employee5: false,
            employee6: false,
            employee7: false,
            empl1: 0,
            empl2: 0,
            empl3: 0,
            empl4: 0,
            empl5: 0,
            empl6: 0,
            empl7: 0,
            online: false,
            registeredauto: 0,
            wantto: -999,
            wanttoTIME: -999,
            wanttoLAST: -999,
            wanttoTIMELAST: -999,
            zakaz: false,
            keyboard1: false,
            keyboard2: false,
            keyboard3: false,
            keyboard4: false,
            keyboard5: false,
            keyboard6: false,
            keyboard7: false,
        });
    }
    message.user = users.find(x=> x.id === message.senderId);
    const bot = (text, params) => {
        return message.send(`${message.user.mention ? `@id${message.user.id} (${message.user.tag})` : `${message.user.tag}`}, ${text}`, params);
    }
    if(message.user.ban)return message.send(`–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã.`)

const command = commands.find(x=> x[0].test(message.text));
if(!command) return;
message.args = message.text.match(command[0]);
await command[1](message, bot);
console.log(`Executed: ${message.user.tag}, ${message.user.uid}: ${message.text}`)

});
const cmd = {
    hear: (p, f) => {
        commands.push([p, f]);
    }
}
/*       var kbd2 = JSON.stringify(
        {
            "type": "carousel",
            "elements": [{
                "photo_id": `${auto.photo_id}`,
                "title": `${auto.name_auto}`,
                "description": `${auto.photo_disc}`,
                "action": {
                    "type": "open_photo"
                },
                "buttons": [{
                    "action": {
                        "type": "text",
                        "label": "–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ üåö",
                        "payload": "{}"
                    }
                }]
            }
            ]
        }
)*/

cmd.hear(/^(?:—Å—Ç–∞—Ä—Ç|–ø–æ–º–æ—â—å|help|–∫–æ–º–∞–Ω–¥—ã|comands|comand|command|commands|–æ–±–Ω–æ–≤–∏—Ç—å)$/i, async (message, bot) => {
     message.user.wantto = -999;
    return bot(`–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥—ã –í–∞—Å –≤–∏–¥–µ—Ç—å!`,
    {
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.employee1 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee2 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        message.user.employee4 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee5 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee6 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.employee1 == true ? `positive` : message.user.employee2 == true ? `positive` : message.user.employee3 == true ?`positive` : 
                        message.user.employee4 == true ? `positive` : message.user.employee5 == true ? `positive` : message.user.employee6 == true ? `positive` : message.user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        })
    })

});
cmd.hear(/^(?:–û)\s(–Ω–∞—Å)$/i, async (message, bot) => {
    return bot (`ProvDrive - —Å–µ—Ä–≤–∏—Å, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö MTA Province. –£ –Ω–∞—Å –í—ã –º–æ–∂–µ—Ç–µ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏. –í—Å–µ —Ü–µ–Ω—ã –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö/–Ω–∞ —Å—Ç–µ–Ω–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.`)
});
cmd.hear(/^(?:–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è)$/i, async (message, bot) => {
    return bot(`—É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –í—ã –º–æ–∂–µ—Ç–µ –ø–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Å—ã–ª–∫–µ: https://vk.com/app5619682_-210741294. 
        –õ–∏–±–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –∏ –ø–æ —Ä–∞–∑–¥–µ–ª—É "–¢—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ" –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É.`)
});




cmd.hear(/^(?:–ü—Ä–æ—Ñ–∏–ª—å|profile)$/i, async (message, bot) => {
     message.user.wantto = -999;
        return bot(`–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:
            1. –í–∞—à UID - ${message.user.uid}.
            2. –í–∞—à–∞ —Ä–æ–ª—å - ${message.user.employee1 == true ? '–°–æ—Ç—Ä—É–¥–Ω–∏–∫' : message.user.employee2 == true ? '–°–æ—Ç—Ä—É–¥–Ω–∏–∫' :
            message.user.employee3 == true ? '–°–æ—Ç—Ä—É–¥–Ω–∏–∫' : message.user.employee4 == true ? '–°–æ—Ç—Ä—É–¥–Ω–∏–∫' :
            message.user.employee5 == true ? '–°–æ—Ç—Ä—É–¥–Ω–∏–∫' : message.user.employee6 == true ? '–°–æ—Ç—Ä—É–∂–Ω–∏–∫' : message.user.employee7 == true ?
            '–°–æ—Ç—Ä—É–¥–Ω–∏–∫' : '–∑–∞–∫–∞–∑—á–∏–∫'}
            3. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - ${((message.user.admin == true) && (message.user.uid == 0)) ? '–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : message.user.admin == true ? '–î–∞' : '–ù–µ—Ç'}`,
                {
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.employee1 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee2 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        message.user.employee4 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee5 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee6 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.employee1 == true ? `positive` : message.user.employee2 == true ? `positive` : message.user.employee3 == true ?`positive` : 
                        message.user.employee4 == true ? `positive` : message.user.employee5 == true ? `positive` : message.user.employee6 == true ? `positive` : message.user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        })
    })
});
//save: vk.api.messages.send({ user_id: message.user.id, message: `–î–∞ —ç—Ç–æ –∂–µ —Å–∞–º [id${message.user.id}|${message.user.tag}]!! `, 

cmd.hear(/^(?:–ê—Ä–µ–Ω–¥–∞)$/i, async (message, bot) => {
     message.user.wantto = -999;
return bot(`–í—ã–±–∏—Ä–∞—è —Å–µ—Ä–≤–µ—Ä, –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –∏–º–µ–µ—Ç–µ –∂–∏–ª—å—ë –∏–ª–∏ –≥–æ—Å—Ç–∏–Ω–∏—Ü—É –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ. –ë–µ–∑ –∂–∏–ª—å—è –∏–ª–∏ –≥–æ—Å—Ç–∏–Ω–∏—Ü—ã –º—ã –Ω–µ —Å–º–æ–∂–µ–º –í–∞–º –≤—ã–¥–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å, —Ç–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–µ–∫—Ç–∞.
    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:`,
     {
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–°–µ—Ä–≤–µ—Ä 1",
                },
                "color": `primary`,
            },
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–°–µ—Ä–≤–µ—Ä 2",
                },
                "color": `primary`,
            },
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–°–µ—Ä–≤–µ—Ä 3",
                },
                "color": `primary`,
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–°–µ—Ä–≤–µ—Ä 4",
                },
                "color": `primary`,
            },
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–°–µ—Ä–≤–µ—Ä 5",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–°–µ—Ä–≤–µ—Ä 6` 
                },
                "color": `primary`
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–°–µ—Ä–≤–µ—Ä 7` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ù–∞–∑–∞–¥` 
                },
                "color": `positive`
            }
            ],   
            ],
        })
    })

});


cmd.hear(/^(?:–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å)\s([0-9]+)$/i, async (message, bot) => {
     message.user.wantto = -999;
return bot(`–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ —É –í–∞—Å –µ—Å—Ç—å –∂–∏–ª—å—ë –∏–ª–∏ –≥–æ—Å—Ç–∏–Ω–∏—Ü–∞. –ë–µ–∑ —ç—Ç–æ–≥–æ, –º—ã –Ω–µ —Å–º–æ–∂–µ–º –¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–≤—Ç–æ–º–æ–±–∏–ª—é. –¢–∞–∫ —É–∂ —É—Å—Ç—Ä–æ–µ–Ω –ø—Ä–æ–µ–∫—Ç.`,
     {
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ${message.args[1]}`,
                },
                "color": `negative`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–ù–∞–∑–∞–¥",
                },
                "color": `primary`,
            },
            ],        
            ],
        })
    })
})

//–≤–æ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤–æ—Ç–∫–Ω—É—Ç—å message.user.wantto = -999
//message.user.

cmd.hear(/^(?:30)\s(–º–∏–Ω—É—Ç)$/i, async (message, bot) => {
    if (message.user.zakaz) return bot(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –∫–æ—Ç–æ—Ä—ã–π –í—ã –∑–∞–∫–∞–∑–∞–ª–∏. –û–∂–∏–¥–∞–π—Ç–µ, –∫–æ–≥–¥–∞ –í–∞–º –µ–≥–æ –æ–¥–æ–±—Ä—è—Ç, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–¥–µ–ª–∞—Ç—å –µ—â—ë –æ–¥–∏–Ω –∑–∞–∫–∞–∑.`)
if (message.user.wantto == -999) return bot(`–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å.`)
    let auto = autos.find(x => x.uid === Number(message.user.wantto))
    let user = users.find(x => x.uid === Number(auto.person_uid))
    message.user.wanttoTIME = '30 –º–∏–Ω—É—Ç'; 
vk.api.messages.send({ user_id: user.id, message: `–í–∞–º –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑! 
–ó–∞–∫–∞–∑—á–∏–∫ - [id${message.user.id}|${message.user.tag}].
–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${auto.name_auto} [${auto.uid}]. 
–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIME}`})
let uzer = users.find(x => x.uid === 0)
vk.api.messages.send({ user_id: user.id, message: `[id${user.id}|${user.tag}]'—É –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑.
–ó–∞–∫–∞–∑—á–∏–∫ - [id${message.user.id}|${message.user.tag}].
–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${auto.name_auto}. 
–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIME}.
–¶–µ–Ω–∞: ${auto.cost30m} [–° —É—á–µ—Ç–æ–º –∑–∞–ª–æ–≥–∞ ${Number(auto.cost30m) + Number(auto.zalog)}]`})
message.user.wanttoLAST = message.user.wantto; message.user.wantto = -999; 
message.user.wanttoTIMELAST = message.user.wanttoTIME; message.user.wanttoTIME = -999; message.user.zakaz = true;
return bot(`–∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑"`,
{
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "inline": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–°–ø–∞—Å–∏–±–æ!`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑!`,
                },
                "color": `negative`
            },
            ]     
            ],
        })
    })
})
cmd.hear(/^(?:1)\s(—á–∞—Å)$/i, async (message, bot) => {
    if (message.user.zakaz) return bot(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –∫–æ—Ç–æ—Ä—ã–π –í—ã –∑–∞–∫–∞–∑–∞–ª–∏. –û–∂–∏–¥–∞–π—Ç–µ, –∫–æ–≥–¥–∞ –í–∞–º –µ–≥–æ –æ–¥–æ–±—Ä—è—Ç, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–¥–µ–ª–∞—Ç—å –µ—â—ë –æ–¥–∏–Ω –∑–∞–∫–∞–∑.`)
if (message.user.wantto == -999) return bot(`–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å.`)
    let auto = autos.find(x => x.uid === Number(message.user.wantto))
    let user = users.find(x => x.uid === Number(auto.person_uid))
    message.user.wanttoTIME = '1 —á–∞—Å';
vk.api.messages.send({ user_id: user.id, message: `–í–∞–º –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑! 
–ó–∞–∫–∞–∑—á–∏–∫ - [id${message.user.id}|${message.user.tag}].
–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${auto.name_auto}. 
–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIME}`})
let uzer = users.find(x => x.uid === 0)
vk.api.messages.send({ user_id: user.id, message: `[id${user.id}|${user.tag}]'—É –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑.
–ó–∞–∫–∞–∑—á–∏–∫ - [id${message.user.id}|${message.user.tag}].
–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${auto.name_auto}. 
–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIME}.
–¶–µ–Ω–∞: ${auto.cost1h} [–° —É—á–µ—Ç–æ–º –∑–∞–ª–æ–≥–∞ ${Number(auto.cost1h) + Number(auto.zalog)}]`})
message.user.wanttoLAST = message.user.wantto; message.user.wantto = -999; 
message.user.wanttoTIMELAST = message.user.wanttoTIME; message.user.wanttoTIME = -999; message.user.zakaz = true;
return bot(`–∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑"`,
{
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "inline": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–°–ø–∞—Å–∏–±–æ!`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑!`,
                },
                "color": `negative`
            },
            ]     
            ],
        })
    })
})
cmd.hear(/^(?:2)\s(—á–∞—Å–∞)$/i, async (message, bot) => {
    if (message.user.zakaz) return bot(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –∫–æ—Ç–æ—Ä—ã–π –í—ã –∑–∞–∫–∞–∑–∞–ª–∏. –û–∂–∏–¥–∞–π—Ç–µ, –∫–æ–≥–¥–∞ –í–∞–º –µ–≥–æ –æ–¥–æ–±—Ä—è—Ç, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–¥–µ–ª–∞—Ç—å –µ—â—ë –æ–¥–∏–Ω –∑–∞–∫–∞–∑.`)
if (message.user.wantto == -999) return bot(`–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å.`)
    let auto = autos.find(x => x.uid === Number(message.user.wantto))
    let user = users.find(x => x.uid === Number(auto.person_uid))
    message.user.wanttoTIME = '2 —á–∞—Å–∞';
vk.api.messages.send({ user_id: user.id, message: `–í–∞–º –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑! 
–ó–∞–∫–∞–∑—á–∏–∫ - [id${message.user.id}|${message.user.tag}].
–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${auto.name_auto}. 
–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIME}`})
let uzer = users.find(x => x.uid === 0)
vk.api.messages.send({ user_id: user.id, message: `[id${user.id}|${user.tag}]'—É –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑.
–ó–∞–∫–∞–∑—á–∏–∫ - [id${message.user.id}|${message.user.tag}].
–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${auto.name_auto}. 
–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIME}.
–¶–µ–Ω–∞: ${auto.cost2h} [–° —É—á–µ—Ç–æ–º –∑–∞–ª–æ–≥–∞ ${Number(auto.cost2h) + Number(auto.zalog)}]`})
message.user.wanttoLAST = message.user.wantto; message.user.wantto = -999; 
message.user.wanttoTIMELAST = message.user.wanttoTIME; message.user.wanttoTIME = -999; message.user.zakaz = true;
return bot(`–∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑"`,
{
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "inline": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–°–ø–∞—Å–∏–±–æ!`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑!`,
                },
                "color": `negative`
            },
            ]     
            ],
        })
    })

})
cmd.hear(/^(?:1)\s(–¥–µ–Ω—å)$/i, async (message, bot) => {
if (message.user.zakaz) return bot(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –∫–æ—Ç–æ—Ä—ã–π –í—ã –∑–∞–∫–∞–∑–∞–ª–∏. –û–∂–∏–¥–∞–π—Ç–µ, –∫–æ–≥–¥–∞ –í–∞–º –µ–≥–æ –æ–¥–æ–±—Ä—è—Ç, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–¥–µ–ª–∞—Ç—å –µ—â—ë –æ–¥–∏–Ω –∑–∞–∫–∞–∑.`)
if (message.user.wantto == -999) return bot(`–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å.`)
let auto = autos.find(x => x.uid === Number(message.user.wantto))
let user = users.find(x => x.uid === Number(auto.person_uid))
 message.user.wanttoTIME = '1 –¥–µ–Ω—å';
vk.api.messages.send({ user_id: user.id, message: `–í–∞–º –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑! 
–ó–∞–∫–∞–∑—á–∏–∫ - [id${message.user.id}|${message.user.tag}].
–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${auto.name_auto}. 
–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIME}`})
let uzer = users.find(x => x.uid === 0)
vk.api.messages.send({ user_id: user.id, message: `[id${user.id}|${user.tag}]'—É –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑.
–ó–∞–∫–∞–∑—á–∏–∫ - [id${message.user.id}|${message.user.tag}].
–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${auto.name_auto}. 
–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIME}.
–¶–µ–Ω–∞: ${auto.cost1d} [–° —É—á–µ—Ç–æ–º –∑–∞–ª–æ–≥–∞ ${Number(auto.cost1d) + Number(auto.zalog)}]`})
message.user.wanttoLAST = message.user.wantto; message.user.wantto = -999; 
message.user.wanttoTIMELAST = message.user.wanttoTIME; message.user.wanttoTIME = -999; message.user.zakaz = true;
return bot(`–∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑"`,
{
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "inline": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–°–ø–∞—Å–∏–±–æ!`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑!`,
                },
                "color": `negative`
            },
            ]     
            ],
        })
    })

})
cmd.hear(/^(?:1)\s(–Ω–µ–¥–µ–ª—è)$/i, async (message, bot) => {
if (message.user.zakaz) return bot(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –∫–æ—Ç–æ—Ä—ã–π –í—ã –∑–∞–∫–∞–∑–∞–ª–∏. –û–∂–∏–¥–∞–π—Ç–µ, –∫–æ–≥–¥–∞ –í–∞–º –µ–≥–æ –æ–¥–æ–±—Ä—è—Ç, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–¥–µ–ª–∞—Ç—å –µ—â—ë –æ–¥–∏–Ω –∑–∞–∫–∞–∑.`)
if (message.user.wantto == -999) return bot(`–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å.`)
let auto = autos.find(x => x.uid === Number(message.user.wantto))
let user = users.find(x => x.uid === Number(auto.person_uid))
message.user.wanttoTIME = '1 –Ω–µ–¥–µ–ª—è';
vk.api.messages.send({ user_id: user.id, message: `–í–∞–º –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑! 
–ó–∞–∫–∞–∑—á–∏–∫ - [id${message.user.id}|${message.user.tag}].
–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${auto.name_auto}. 
–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIME}`})
let uzer = users.find(x => x.uid === 0)
vk.api.messages.send({ user_id: user.id, message: `[id${user.id}|${user.tag}]'—É –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑.
–ó–∞–∫–∞–∑—á–∏–∫ - [id${message.user.id}|${message.user.tag}].
–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${auto.name_auto}. 
–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIME}.
–¶–µ–Ω–∞: ${auto.cost1w} [–° —É—á–µ—Ç–æ–º –∑–∞–ª–æ–≥–∞ ${Number(auto.cost1w) + Number(auto.zalog)}]`})
message.user.wanttoLAST = message.user.wantto; message.user.wantto = -999; 
message.user.wanttoTIMELAST = message.user.wanttoTIME; message.user.wanttoTIME = -999; message.user.zakaz = true;
return bot(`–∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑"`,
{
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "inline": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–°–ø–∞—Å–∏–±–æ!`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑!`,
                },
                "color": `negative`
            },
            ]     
            ],
        })
    })
})

cmd.hear(/^(?:–û—Ç–º–µ–Ω–∏—Ç—å)\s(–∑–∞–∫–∞–∑|–∑–∞–∫–∞–∑!)$/i, async (message, bot) => {
    if (!message.user.zakaz) return bot(`—É –í–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤!`)
let auto = autos.find(x => x.uid === Number(message.user.wanttoLAST))
let user = users.find(x => x.uid === Number(auto.person_uid))
vk.api.messages.send({ user_id: user.id, message: `–ó–∞–∫–∞–∑ –æ—Ç [id${message.user.id}|${message.user.tag}] –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å ${auto.name_auto} (–≤—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: ${message.user.wanttoTIMELAST})
    –±—ã–ª –æ—Ç–º–µ–Ω—ë–Ω!`})
message.user.zakaz = false; message.user.wanttoLAST = -999; message.user.wanttoTIMELAST = -999;
return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–≤–æ–π –∑–∞–∫–∞–∑!`,
 {
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.employee1 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee2 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        message.user.employee4 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee5 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee6 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.employee1 == true ? `positive` : message.user.employee2 == true ? `positive` : message.user.employee3 == true ?`positive` : 
                        message.user.employee4 == true ? `positive` : message.user.employee5 == true ? `positive` : message.user.employee6 == true ? `positive` : message.user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        })
    })
})

cmd.hear(/^(?:–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å)\s([0-9]+)$/i, async (message, bot) => {
    let auto = autos.find(x => x.uid === Number(message.args[1]))
    message.user.wantto = message.args[1];
vk.api.messages.send({ user_id: message.user.id, message:`
    1. –ó–∞–ª–æ–≥: ${auto.zalog}
    2. 30 –º–∏–Ω—É—Ç: ${auto.cost30m} [–° —É—á–µ—Ç–æ–º –∑–∞–ª–æ–≥–∞ ${Number(auto.cost30m) + Number(auto.zalog)}]
    3. 1 —á–∞—Å: ${auto.cost1h} [–° —É—á–µ—Ç–æ–º –∑–∞–ª–æ–≥–∞ ${Number(auto.cost1h) + Number(auto.zalog)}]
    4. 2 —á–∞—Å–∞: ${auto.cost2h} [–° —É—á–µ—Ç–æ–º –∑–∞–ª–æ–≥–∞ ${Number(auto.cost2h) + Number(auto.zalog)}]
    5. 1 –¥–µ–Ω—å: ${auto.cost1d} [–° —É—á–µ—Ç–æ–º –∑–∞–ª–æ–≥–∞ ${Number(auto.cost1d) + Number(auto.zalog)}]
    6. 1 –Ω–µ–¥–µ–ª—è: ${auto.cost1w} [–° —É—á–µ—Ç–æ–º –∑–∞–ª–æ–≥–∞ ${Number(auto.cost1w) + Number(auto.zalog)}]
    –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:`, keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `30 –º–∏–Ω—É—Ç`,
                },
                "color": `primary`
            },
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "1 —á–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "2 —á–∞—Å–∞",
                },
                "color": `primary`,
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–í–µ—Å—å –¥–µ–Ω—å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–ù–µ–¥–µ–ª—è",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ù–∞–∑–∞–¥` 
                },
                "color": `negative`
            }
            ],     
            ],
        })
})
})

cmd.hear(/^(?:–ù–∞–∑–∞–¥|–ø–æ–Ω—è—Ç–Ω–æ|—Å–ø–∞—Å–∏–±–æ!)$/i, async (message, bot) => {
    message.user.wantto = -999;
 return bot(`—É—Å–ø–µ—à–Ω–æ!`,
    {
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.employee1 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee2 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        message.user.employee4 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee5 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee6 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.employee1 == true ? `positive` : message.user.employee2 == true ? `positive` : message.user.employee3 == true ? `positive` : 
                        message.user.employee4 == true ? `positive` : message.user.employee5 == true ? `positive` : message.user.employee6 == true ? `positive` : message.user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        })
    })

});

cmd.hear(/^(?:–°–µ—Ä–≤–µ—Ä)\s([0-9]+)$/i, async (message, bot) => {
 message.user.wantto = -999;
if (message.args[1] == 1){
    let user = users.find(x=> ((x.uid == 0) && (x.admin == true)));
    var flag = false;
    if (user.empl1 == 0){return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π') }
        var temp = -1;
        for (var i = 0; i < users.length; i++){
        let user = users.find(x=> ((x.employee1 === true) && (x.online === true) && (x.uid > temp)));
       if (user){
        flag = true;
        temp = user.uid;
vk.api.messages.send({ user_id: message.user.id, message: `–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ ${message.args[1]} —Å–µ—Ä–≤–µ—Ä–µ: `, 
        template: user.keyboard1
    }) 
}
}
if (flag == false) return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')
 if (flag) flag = false;

} 

if (message.args[1] == 2){
    let user = users.find(x=> ((x.uid == 0) && (x.admin == true)));
    var flag = false;
    if (user.empl2 == 0){ 
        return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π') }
        var temp = -1;
        for (var i = 0; i < users.length; i++){
        let user = users.find(x=> ((x.employee2 === true) && (x.online === true) && (x.uid > temp)));
       if (user){
        temp = user.uid;
        flag = true;
vk.api.messages.send({ user_id: message.user.id, message: `–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ ${message.args[1]} —Å–µ—Ä–≤–µ—Ä–µ: `, 
        template: user.keyboard2
    }) 
}
}
if (flag == false) return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')
 if (flag) flag = false;
} 

if (message.args[1] == 3){
    let user = users.find(x=> ((x.uid == 0) && (x.admin == true)));
    var flag = false;
    if (user.empl3 == 0){ 
        return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π') }
        var temp = -1;
        for (var i = 0; i < users.length; i++){
        let user = users.find(x=> ((x.employee3 === true) && (x.online === true) && (x.uid > temp)));
       if (user){
        flag = true;
        temp = user.uid;
vk.api.messages.send({ user_id: message.user.id, message: `–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ ${message.args[1]} —Å–µ—Ä–≤–µ—Ä–µ: `, 
        template: user.keyboard3
    }) 
}
}
if (flag == false) return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')
 if (flag) flag = false;
} 

if (message.args[1] == 4){
    let user = users.find(x=> ((x.uid == 0) && (x.admin == true)));
    var flag = false;
    if (user.empl4 == 0){ 
        return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π') }
        var temp = -1;
        for (var i = 0; i < users.length; i++){
        let user = users.find(x=> ((x.employee4 === true) && (x.online === true) && (x.uid > temp)));
       if (user){
        flag = true;
        temp = user.uid;
vk.api.messages.send({ user_id: message.user.id, message: `–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ ${message.args[1]} —Å–µ—Ä–≤–µ—Ä–µ: `, 
        template: user.keyboard4
    }) 
}
}
if (flag == false) return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')
 if (flag) flag = false;
} 

if (message.args[1] == 5){
    let user = users.find(x=> ((x.uid == 0) && (x.admin == true)));
    var flag = false;
    if (user.empl5 == 0){ 
        return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π') }
        var temp = -1;
        for (var i = 0; i < users.length; i++){
        let user = users.find(x=> ((x.employee5 === true) && (x.online === true) && (x.uid > temp)));
       if (user){
        flag = true;
        temp = user.uid;
vk.api.messages.send({ user_id: message.user.id, message: `–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ ${message.args[1]} —Å–µ—Ä–≤–µ—Ä–µ: `, 
        template: user.keyboard5
    }) 
}
}
if (flag == false) return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')
 if (flag) flag = false;
} 

if (message.args[1] == 6){
    let user = users.find(x=> ((x.uid == 0) && (x.admin == true)));
    var flag = false;
    if (user.empl6 == 0){ 
        return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π') }
        var temp = -1;
        for (var i = 0; i < users.length; i++){
        let user = users.find(x=> ((x.employee6 === true) && (x.online === true) && (x.uid > temp)));
       if (user){
        flag = true;
        temp = user.uid;
vk.api.messages.send({ user_id: message.user.id, message: `–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ ${message.args[1]} —Å–µ—Ä–≤–µ—Ä–µ: `, 
        template: user.keyboard6
    }) 
}
}
if (flag == false) return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')
 if (flag) flag = false;
} 

if (message.args[1] == 7){
    let user = users.find(x=> ((x.uid == 0) && (x.admin == true)));
    var flag = false;
    if (user.empl7 == 0){ 
        return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π') 
    } var temp = -1;
        for (var i = 0; i < users.length; i++){
        let user = users.find(x=> ((x.employee7 === true) && (x.online === true) && (x.uid > temp)));
       if (user){
        flag = true;
        temp = user.uid;
vk.api.messages.send({ user_id: message.user.id, message: `–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ ${message.args[1]} —Å–µ—Ä–≤–µ—Ä–µ: `, 
        template: user.keyboard7
    }) 
}
}
if (flag == false) return bot('—Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')
 if (flag) flag = false;
} 


})

cmd.hear(/^(?:–ù–∞–Ω—è—Ç—å)\s([0-9]+)\s([0-9]+)$/i, async (message, bot) => {
    if (!message.user.admin) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤`)
    let user = users.find(x=> x.uid === Number(message.args[1]))  
    if (!user) return bot (`–Ω–µ–≤–µ—Ä–Ω—ã–π UID.`)
     vk.api.messages.send({ user_id: message.user.id, message: `–í—ã –Ω–∞–Ω—è–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.`,
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.employee1 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee2 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        message.user.employee4 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee5 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee6 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.employee1 == true ? `positive` : message.user.employee2 == true ? `positive` : message.user.employee3 == true ?`positive` : 
                        message.user.employee4 == true ? `positive` : message.user.employee5 == true ? `positive` : message.user.employee6 == true ? `positive` : message.user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        })
    });
    if (message.args[2] == 1){ 
    let uzer = users.find(x=> x.uid === 0) 
    uzer.empl1++;
    user.employee1 = true;
    }
        if (message.args[2] == 2){ 
    let uzer = users.find(x=> x.uid === 0) 
    uzer.empl2++;
    user.employee2 = true;
    }
        if (message.args[2] == 3){ 
    let uzer = users.find(x=> x.uid === 0) 
    uzer.empl3++;
    user.employee3 = true;
    }
        if (message.args[2] == 4){ 
    let uzer = users.find(x=> x.uid === 0) 
    uzer.empl4++;
    user.employee4 = true;
    }
        if (message.args[2] == 5){ 
    let uzer = users.find(x=> x.uid === 0) 
    uzer.empl5++;
    user.employee5 = true;
    }
        if (message.args[2] == 6){ 
    let uzer = users.find(x=> x.uid === 0) 
    uzer.empl6++;
    user.employee6 = true;
    }
        if (message.args[2] == 7){ 
    let uzer = users.find(x=> x.uid === 0) 
    uzer.empl7++;
    user.employee7 = true;
    }
         vk.api.messages.send({ user_id: user.id, message: `–í–∞—Å –Ω–∞–Ω—è–ª–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É –Ω–∞ ${message.args[2]} —Å–µ—Ä–≤–µ—Ä–µ.`,
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${user.employee1 == true ? `–°–æ—Ç—ÄCommands` : user.employee2 == true ? `–°–æ—Ç—ÄCommands` : user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                       user.employee4 == true ? `–°–æ—Ç—ÄCommands` : user.employee5 == true ? `–°–æ—Ç—ÄCommands` : user.employee6 == true ? `–°–æ—Ç—ÄCommands` : user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${user.employee1 == true ? `positive` : user.employee2 == true ? `positive` : user.employee3 == true ?`positive` : 
                        user.employee4 == true ? `positive` : user.employee5 == true ? `positive` : user.employee6 == true ? `positive` : user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        }) 
    })
});
cmd.hear(/^(?:–£–≤–æ–ª–∏—Ç—å)\s([0-9]+)\s([0-9]+)$/i, async (message, bot) => {
    if (!message.user.admin) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤!`)
    let user = users.find(x=> x.uid === Number(message.args[1])) 
    if ((!user.employee1) && (!user.employee2) && (!user.employee3) && (!user.employee4) && (!user.employee5) &&
        (!user.employee6) && (!user.employee7)) return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –í–∞—à–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º.`)
     vk.api.messages.send({ user_id: message.user.id, message: `–í—ã —É–≤–æ–ª–∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.`,
      keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.employee1 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee2 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        message.user.employee4 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee5 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee6 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.employee1 == true ? `positive` : message.user.employee2 == true ? `positive` : message.user.employee3 == true ?`positive` : 
                        message.user.employee4 == true ? `positive` : message.user.employee5 == true ? `positive` : message.user.employee6 == true ? `positive` : message.user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        })
    });
     vk.api.messages.send({ user_id: user.id, message: `–í–∞—Å —É–≤–æ–ª–∏–ª–∏ —Å —Ä–∞–±–æ—Ç—ã –Ω–∞ ${message.args[2]} —Å–µ—Ä–≤–µ—Ä–µ.`,
      keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${user.employee1 == true ? `–°–æ—Ç—ÄCommands` : user.employee2 == true ? `–°–æ—Ç—ÄCommands` : user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        user.employee4 == true ? `–°–æ—Ç—ÄCommands` : user.employee5 == true ? `–°–æ—Ç—ÄCommands` : user.employee6 == true ? `–°–æ—Ç—ÄCommands` : user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${user.employee1 == true ? `positive` : user.employee2 == true ? `positive` : user.employee3 == true ?`positive` : 
                        user.employee4 == true ? `positive` : user.employee5 == true ? `positive` : user.employee6 == true ? `positive` : user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        })
    });
     if (message.args[2] == 1){
     user.employee1 = false;
     user.keyboard1 = false;
     let uzer = users.find(x=> x.uid === 0) 
     uzer.empl1--;
    }
         if (message.args[2] == 2){
     user.employee2 = false;
     user.keyboard2 = false;
     let uzer = users.find(x=> x.uid === 0) 
     uzer.empl2--;
    }
         if (message.args[2] == 3){
     user.employee3 = false;
     user.keyboard3 = false;
     let uzer = users.find(x=> x.uid === 0) 
     uzer.empl3--;
    }
         if (message.args[2] == 4){
     user.employee4 = false;
     user.keyboard4 = false;
     let uzer = users.find(x=> x.uid === 0) 
     uzer.empl4--;
    }
         if (message.args[2] == 5){
     user.employee5 = false;
     user.keyboard5 = false;
     let uzer = users.find(x=> x.uid === 0) 
     uzer.empl5--;
    }
         if (message.args[2] == 6){
     user.employee6 = false;
     user.keyboard6 = false;
     let uzer = users.find(x=> x.uid === 0) 
     uzer.empl6--;
    }
         if (message.args[2] == 7){
     user.employee7 = false;
     user.keyboard7 = false;
     let uzer = users.find(x=> x.uid === 0) 
     uzer.empl7--;
    }
});



cmd.hear(/^(?:–æ–Ω–ª–∞–π–Ω|online)$/i, async (message, bot) => {
    if ((message.user.employee1 !== true) && (message.user.employee2 !== true) && (message.user.employee3 !== true) && (message.user.employee4 !== true) && (message.user.employee5 !== true) && (message.user.employee6 !== true) 
        && (message.user.employee7 !== true)) return bot (`–∫–æ–º–∞–Ω–¥–∞ –ª–∏—à—å –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.`)
    message.user.online = true;
    return bot ('–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –í–∞—à–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏.',
    {
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.employee1 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee2 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        message.user.employee4 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee5 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee6 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.employee1 == true ? `positive` : message.user.employee2 == true ? `positive` : message.user.employee3 == true ? `positive` : 
                        message.user.employee4 == true ? `positive` : message.user.employee5 == true ? `positive` : message.user.employee6 == true ? `positive` : message.user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        })
    })
});
cmd.hear(/^(?:–æ—Ñ–ª–∞–π–Ω|–æ—Ñ—Ñ–ª–∞–π–Ω|ofline|offline)$/i, async (message, bot) => {
    if ((message.user.employee1 !== true) && (message.user.employee2 !== true) && (message.user.employee3 !== true) && (message.user.employee4 !== true) && (message.user.employee5 !== true) && (message.user.employee6 !== true) 
        && (message.user.employee7 !== true) && (
        message.employee7 !== true)) return bot (`–∫–æ–º–∞–Ω–¥–∞ –ª–∏—à—å –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.`)
    message.user.online = false;
    return bot ('–í—ã –≤—ã—à–ª–∏. –í–∞—à–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã.',
    {
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.employee1 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee2 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        message.user.employee4 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee5 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee6 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.employee1 == true ? `positive` : message.user.employee2 == true ? `positive` : message.user.employee3 == true ? `positive` : 
                        message.user.employee4 == true ? `positive` : message.user.employee5 == true ? `positive` : message.user.employee6 == true ? `positive` : message.user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        })
    })
});

cmd.hear(/^(?:–°–æ—Ç—ÄCommands|–°–æ—Ç—ÄComands)$/i, async (message, bot) => {
        if ((message.user.employee1 !== true) && (message.user.employee2 !== true) && (message.user.employee3 !== true) && (message.user.employee4 !== true) && (message.user.employee5 !== true) && (message.user.employee6 !== true) 
        && (message.user.employee7 !== true) && (
        message.employee7 !== true)) return bot (`–∫–æ–º–∞–Ω–¥–∞ –ª–∏—à—å –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.`)
return bot(`–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    1. –û–Ω–ª–∞–π–Ω - –æ–Ω–ª–∞–π–Ω
    2. –û—Ñ—Ñ–ª–∞–π–Ω - –æ—Ñ—Ñ–ª–∞–π–Ω
    `,{
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "inline": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–û–Ω–ª–∞–π–Ω`,
                },
                "color": `positive`
            },
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–û—Ñ–ª–∞–π–Ω`,
                },
                "color": `negative`
            },
            ],   
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ù–∞–∑–∞–¥`,
                },
                "color": `primary`
            },
            ],   
            ],
        })
    })


});

cmd.hear(/^(?:Acomands|–ê–∫–æ–º–∞–Ω–¥—ã|A–∫–æ–º–∞–Ω–¥—ã|Acommands|–êcommands)$/i, async (message, bot) => {
    if (message.user.admin !== true) return bot (`–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.`)
return bot(`–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    1. –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –∏—Ö UID –∏ —Å—Ç–∞—Ç—É—Å.
    2. –ù–∞–Ω—è—Ç—å UID [—Å–µ—Ä–≤–µ—Ä] - –Ω–∞–Ω—è—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ –µ–≥–æ UID —Å [1-7 —Å–µ—Ä–≤–µ—Ä–∞].
    3. –£–≤–æ–ª–∏—Ç—å UID [—Å–µ—Ä–≤–µ—Ä] - —É–≤–æ–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ –µ–≥–æ UID —Å [1-7 —Å–µ—Ä–≤–µ—Ä–∞].
    3. reg [–∫–æ–ª-–≤–æ –º–∞—à–∏–Ω] [—Å–µ—Ä–≤–µ—Ä] - —Ä–µ–≥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–≤—Ç–æ –Ω–∞ UID —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ (–∫–∞—Ä—Ç–∏–Ω–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è 221x136).
    4. –û–±–Ω–æ–≤–∏—Ç—å [UID] [—Å–µ—Ä–≤–µ—Ä] - –æ–±–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —É UID.
    5. –£–¥–∞–ª–∏—Ç—å [id car] [—Å–µ—Ä–≤–µ—Ä] - –Ω–∞–≤—Å–µ–≥–¥–∞ —É–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –ø–æ –µ–≥–æ id —Å —Å–µ—Ä–≤–µ—Ä–∞.
    6. –ó–∞–±—Ä–∞–ª–∏ [id car] [—Å–µ—Ä–≤–µ—Ä] - —É–≤–æ–¥–∏—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤ –Ω–µ–∞–∫—Ç–∏–≤.
    7. –í–µ—Ä–Ω—É–ª–∏ [id car] [—Å–µ—Ä–≤–µ—Ä] - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∏–∑ –Ω–µ–∞–∫—Ç–∏–≤–∞.
    –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
    1. –î–∞—Ç—å ADM [UID] - –≤—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∫—É.
    2. –ó–∞–±—Ä–∞—Ç—å ADM [UID] - –∑–∞–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∫—É.
    –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:
    1. –û–Ω–ª–∞–π–Ω - –æ–Ω–ª–∞–π–Ω
    2. –û—Ñ—Ñ–ª–∞–π–Ω - –æ—Ñ—Ñ–ª–∞–π–Ω
    `,{
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "inline": true,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏`,
                },
                "color": `primary`
            },
            ],     
            ],
        })
    })


});


cmd.hear(/^(?:–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏)$/i, async (message, bot) => {
    if(message.user.admin == true){
        let user = users.find(x=> (x.uid === 0))
        if ((user.empl1 == 0) && (user.empl2 == 0) && (user.empl3 == 0) && (user.empl4 == 0) && (user.empl5 == 0) && (user.empl6 == 0) && (user.empl7 == 0)) return bot(`—É –í–∞—Å –µ—â—ë –Ω–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤`)
    await bot(`–ù–∞—Ö–æ–∂—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤–∞—Å –ø–æ —Ñ–æ—Ä–º–µ:\n
    [Server] - [Name] - [UID] - [Status]`)
    let flag = false; 
    temp = -3;
    for (var i = 0; i < users.length; i++){
        let user = users.find(x=> ((x.employee1 === true)||(x.employee2 === true)||(x.employee3 === true)||(x.employee4 === true)||(x.employee5 === true)||(x.employee6 === true)||(x.employee7 === true)) && (x.uid > temp))
        temp = user.uid;
        vk.api.messages.send({ user_id: message.user.id, message: `${user.employee1 == true ? '[1]' : user.employee2 == true ? '[2]' : user.employee3 == true ? '[3]' :
            user.employee4 == true ? '[4]' : user.employee5 == true ? '[5]' : user.employee6 == true ? '[6]' : '[7]'} - [id${message.user.id}|${message.user.tag}] - [${user.uid}] - [${user.online == false ? 'offline]' : 'online]'}`});
    }
} else return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤.`)
});

cmd.hear(/^(?:—É–¥–∞–ª–∏—Ç—å)\s([0-9]+)\s([0-9]+)$/i, async (message, bot) => {
    if (!message.user.admin) return bot (`–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤`)
    let auto = autos.find(x => x.uid === Number(message.args[1]))
    if (!auto) return bot ('—Ç–∞–∫–æ–≥–æ id –∞–≤—Ç–æ–º–æ–±–∏–ª—è –Ω–µ—Ç, –ª–∏–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä')
    let user = users.find(x => x.uid === auto.person_uid); var del = Number(auto.uid)
    auto.full = true; user.registeredauto--; auto.now = true; autos.splice(del,1)
    return bot(`–∞–≤—Ç–æ–º–æ–±–∏–ª—å [car id = ${message.args[1]}], –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º [UID = ${auto.person_uid}] –±—ã–ª —É–¥–∞–ª–µ–Ω.
        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–û–±–Ω–æ–≤–∏—Ç—å ${user.uid} ${message.args[2]}"`)
});

cmd.hear(/^(?:–∑–∞–±—Ä–∞–ª–∏)\s([0-9]+)\s([0-9]+)$/i, async (message, bot) => {
    if (!message.user.admin) return bot (`–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤`)
    let auto = autos.find(x => x.uid === Number(message.args[1]))
    if (!auto) return bot ('—Ç–∞–∫–æ–≥–æ id –∞–≤—Ç–æ–º–æ–±–∏–ª—è –Ω–µ—Ç, –ª–∏–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä')
    let user = users.find(x => x.uid === auto.person_uid)
    auto.now = false;
    return bot(`–∞–≤—Ç–æ–º–æ–±–∏–ª—å [car id = ${message.args[1]}], –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º [UID = ${auto.person_uid}] —É–±—Ä–∞–Ω –≤ –Ω–µ–∞–∫—Ç–∏–≤.
        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–û–±–Ω–æ–≤–∏—Ç—å ${user.uid} ${message.args[2]}"`)
});

cmd.hear(/^(?:–≤–µ—Ä–Ω—É–ª–∏)\s([0-9]+)\s([0-9]+)$/i, async (message, bot) => {
    if (!message.user.admin) return bot (`–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤`)
    let auto = autos.find(x => x.uid === Number(message.args[1]))
    if (!auto) return bot ('—Ç–∞–∫–æ–≥–æ id –∞–≤—Ç–æ–º–æ–±–∏–ª—è –Ω–µ—Ç, –ª–∏–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä')
    let user = users.find(x => x.uid === auto.person_uid)
    auto.now = true;
    return bot(`–∞–≤—Ç–æ–º–æ–±–∏–ª—å [car id = ${message.args[1]}], –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º [UID = ${auto.person_uid}] –≤–æ–∑–≤—Ä–∞—â—ë–Ω –∏–∑ –Ω–µ–∞–∫—Ç–∏–≤–∞.
        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–û–±–Ω–æ–≤–∏—Ç—å ${user.uid} ${message.args[2]}"`)
});

cmd.hear(/^(?:–¥–∞—Ç—å|give)\s(–∞–¥–º|ADM|–∞–¥–º–∏–Ω–∫—É|)\s([0-9]+)$/i, async (message, bot) => {
    if (message.user.uid !== 0) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`)
    let user = users.find(x=> x.uid === Number(message.args[2])); 
    user.admin = true;
     vk.api.messages.send({ user_id: user.id, message: `–í–∞–º –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!`,
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${user.employee1 == true ? `–°–æ—Ç—ÄCommands` : user.employee2 == true ? `–°–æ—Ç—ÄCommands` : user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        user.employee4 == true ? `–°–æ—Ç—ÄCommands` : user.employee5 == true ? `–°–æ—Ç—ÄCommands` : user.employee6 == true ? `–°–æ—Ç—ÄCommands` : user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${user.employee1 == true ? `positive` : user.employee2 == true ? `positive` : user.employee3 == true ?`positive` : 
                        user.employee4 == true ? `positive` : user.employee5 == true ? `positive` : user.employee6 == true ? `positive` : user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        }) 
    })
    return bot(`—É—á–∞—Å—Ç–Ω–∏–∫—É ${user.uid} –≤—ã–¥–∞–Ω–∞ –∞–¥–º–∏–Ω–∫–∞!`, {
        keyboard:JSON.stringify(
        {
            "one_time": false,
            "buttons": [
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ê—Ä–µ–Ω–¥–∞`,
                },
                "color": `positive`
            },
            ],
            [
            {
                "action":{
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–û –Ω–∞—Å",
                },
                "color": `primary`,
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": "–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è",
                },
                "color": `primary`,
            }
            ],     
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `–ü—Ä–æ—Ñ–∏–ª—å` 
                },
                "color": `primary`
            }
            ],
            [
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.admin == true ? `Acomands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.admin == true ? `positive` : `negative`}`
            },
            {
                "action": {
                    "type": "text",
                    "payload": "{\"button\": \"6\"}",
                    "label": `${message.user.employee1 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee2 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee3 == true ? `–°–æ—Ç—ÄCommands` : 
                        message.user.employee4 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee5 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee6 == true ? `–°–æ—Ç—ÄCommands` : message.user.employee7 == true ? 
                        `–°–æ—Ç—ÄCommands` : `–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ`}` 
                },
                "color": `${message.user.employee1 == true ? `positive` : message.user.employee2 == true ? `positive` : message.user.employee3 == true ?`positive` : 
                        message.user.employee4 == true ? `positive` : message.user.employee5 == true ? `positive` : message.user.employee6 == true ? `positive` : message.user.employee7 == true ? 
                        `positive` : `negative`}` 
            }
            ],     
            ],
        }) 
    })
});
cmd.hear(/^(?:–∑–∞–±—Ä–∞—Ç—å)\s(–∞–¥–º|ADM|–∞–¥–º–∏–Ω–∫—É|)\s([0-9]+)$/i, async (message, bot) => {
    if (message.user.uid !== 0) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`)
    let user = users.find(x=> x.uid === Number(message.args[2]));
    user.admin = false; 
    return bot(`—É —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${user.uid} –∑–∞–±—Ä–∞–Ω–∞ –∞–¥–º–∏–Ω–∫–∞!`)
});


cmd.hear(/^(?:–û–±–Ω–æ–≤–∏—Ç—å)\s([0-9]+)\s([0-9]+)$/i, async (message, bot) => {
if (!message.user.admin) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤`)
let user = users.find(x=> x.uid === Number(message.args[1])); 
var temp = -1;
let num = 1; var kbd3 = []; var ij = 0;
for (var i = 0; i < autos.length; i++){ 
           let auto = autos.find(x => ((x.person_uid === user.uid) && (x.uid > temp)) )
           temp = Number(auto.uid);
        if (auto.now == false) continue
 var kbd2 = 
       {
                "photo_id": `${auto.photo_id}`,
                "title": `${auto.name_auto}`,
                "description": `${auto.now == true ? `${auto.photo_disc}` : '–î–∞–Ω–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤–∑—è—Ç –≤ –∞—Ä–µ–Ω–¥—É'}`,
                "action": {
                    "type": "open_photo"
                },
                "buttons": [{
                    "action": {
                        "type": "text",
                        "label": `${auto.now == true ? `–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å ${auto.uid}` : `–ó–∞–±—Ä–∞–Ω–æ [${auto.uid}]`}`,
                        "payload": "{}"
                    }, 
                    "color": `${auto.now == true ? `positive` : `negative`}`
                }]
            }

            kbd3[ij] = kbd2;
            ij++;
} 
temp = -1;
for (var i = 0; i < autos.length; i++){ 
           let auto = autos.find(x => ((x.person_uid === user.uid) && (x.uid > temp)) )
           temp = Number(auto.uid);
        if (auto.now) continue;
 var kbd2 = 
       {
                "photo_id": `${auto.photo_id}`,
                "title": `${auto.name_auto}`,
                "description": `${auto.now == true ? `${auto.photo_disc}` : '–î–∞–Ω–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤–∑—è—Ç –≤ –∞—Ä–µ–Ω–¥—É'}`,
                "action": {
                    "type": "open_photo"
                },
                "buttons": [{
                    "action": {
                        "type": "text",
                        "label": `${auto.now == true ? `–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å ${auto.uid}` : `–ó–∞–±—Ä–∞–Ω–æ [${auto.uid}]`}`,
                        "payload": "{}"
                    }, 
                    "color": `${auto.now == true ? `positive` : `negative`}`
                }]
            }

            kbd3[ij] = kbd2;
} 
ij = 0;
 var usedform =JSON.stringify( 
{
            "type": "carousel",
            "elements": kbd3
        }
)

if (message.args[2] == 1){
 user.keyboard1 = usedform
await bot(`—Ç–æ–≤–∞—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ${message.args[1]} –Ω–∞ ${message.args[2]} —Å–µ—Ä–≤–µ—Ä–µ`,
{
template: user.keyboard1
})
}
if (message.args[2] == 2){
 user.keyboard2 = usedform
await bot(`—Ç–æ–≤–∞—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ${message.args[1]} –Ω–∞ ${message.args[2]} —Å–µ—Ä–≤–µ—Ä–µ`,
{
template: user.keyboard2
})
}
if (message.args[2] == 3){
 user.keyboard3 = usedform
await bot(`—Ç–æ–≤–∞—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ${message.args[1]} –Ω–∞ ${message.args[2]} —Å–µ—Ä–≤–µ—Ä–µ`,
{
template: user.keyboard3
})
}
if (message.args[2] == 4){
 user.keyboard4 = usedform
await bot(`—Ç–æ–≤–∞—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ${message.args[1]} –Ω–∞ ${message.args[2]} —Å–µ—Ä–≤–µ—Ä–µ`,
{
template: user.keyboard4
})
}
if (message.args[2] == 5){
 user.keyboard5 = usedform
await bot(`—Ç–æ–≤–∞—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ${message.args[1]} –Ω–∞ ${message.args[2]} —Å–µ—Ä–≤–µ—Ä–µ`,
{
template: user.keyboard5
})
}
if (message.args[2] == 6){
 user.keyboard6 = usedform
await bot(`—Ç–æ–≤–∞—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ${message.args[1]} –Ω–∞ ${message.args[2]} —Å–µ—Ä–≤–µ—Ä–µ`,
{
template: user.keyboard6
})
}
if (message.args[2] == 7){
 user.keyboard7 = usedform
await bot(`—Ç–æ–≤–∞—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ${message.args[1]} –Ω–∞ ${message.args[2]} —Å–µ—Ä–≤–µ—Ä–µ`,
{
template: user.keyboard7
})
}

});
cmd.hear(/^(?:reg)\s([0-9]+)\s([0-9]+)$/i, async (message, bot) => {
    if (message.user.admin !== true) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤`)
    if (message.args[1] > 10) return bot('–Ω–∞ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–Ω–æ –∑–∞–≤–µ—Å—Ç–∏ –Ω–µ –±–æ–ª—å—à–µ —á–µ–º 10 –º–∞—à–∏–Ω')
        if (message.args[1] <= 0) return bot('–Ω–µ–ª—å–∑—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω–µ–µ —á–µ–º 1 –º–∞—à–∏–Ω—É')
            if ((message.args[2] < 1) || (message.args[2] > 7)) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π —Å–µ—Ä–≤–µ—Ä.`)
                let frm = users.find (x=> x.uid === Number(message.args[2]));
       /*    if (frm.employee1 !== true){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º`)} 
            if (frm.employee2 !== true){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º`)} 
                if (frm.employee3 !== true){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º`)} 
                    if (frm.employee4 !== true){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º`)} 
                        if (frm.employee5 !== true){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º`)} 
                            if (frm.employee6 !== true){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º`)} 
                                if (frm.employee7 !== true){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º`)} */
            message.user.admreg = true;
await bot(`—ç—Ç–æ —Ñ–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ UID! 
    –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Ñ–æ—Ä–º—É, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:
    1. [UID —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞] 
    2. [photo_id] 
    3. [–ù–∞–∑–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è] 
    4. [–¶–µ–Ω–∞ –∑–∞–ª–æ–≥–∞]
    5. [–¶–µ–Ω–∞ –∑–∞ 30 –º–∏–Ω—É—Ç]
    6. [–¶–µ–Ω–∞ –∑–∞ 1 —á–∞—Å]
    7. [–¶–µ–Ω–∞ –∑–∞ 2 —á–∞—Å–∞]
    8. [–¶–µ–Ω–∞ –∑–∞ 1 –¥–µ–Ω—å]
    9. [–¶–µ–Ω–∞ –∑–∞ 1 –Ω–µ–¥–µ–ª—é]
    –¢–∞–∫—É—é —Ñ–æ—Ä–º—É –í–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å ${message.args[1]} —Ä–∞–∑(–∞)`)
var num = Number(message.args[1]); var n = 1;  var check = message.args[2];
    cmd.hear(/^(.*)\n(.*)\n(.*)\n(.*)\n(.*)\n(.*)\n(.*)\n(.*)\n(.*)+/i, async (message, bot) => {
            if (message.args[1].slice(0, 2) == '1.') {message.args[1] = message.args[1].slice(3)}
                if (message.args[2].slice(0, 2) == '2.') {message.args[2] = message.args[2].slice(2)}
                    if (message.args[3].slice(0, 2) == '3.') {message.args[3] = message.args[3].slice(2)}
                        if (message.args[4].slice(0, 2) == '4.') {message.args[4] = message.args[4].slice(2)}
                            if (message.args[5].slice(0, 2) == '5.') {message.args[5] = message.args[5].slice(2)}
                                if (message.args[6].slice(0, 2) == '6.') {message.args[6] = message.args[6].slice(2)}
                                    if (message.args[7].slice(0, 2) == '7.') {message.args[7] = message.args[7].slice(2)}
                                        if (message.args[8].slice(0, 2) == '8.') {message.args[8] = message.args[8].slice(2)}
                                            if (message.args[9].slice(0, 2) == '9.') {message.args[9] = message.args[9].slice(2)}
              if (message.args[1].slice(0, 3) == '1. ') {message.args[1] = message.args[1].slice(3)}
                if (message.args[2].slice(0, 3) == '2. ') {message.args[2] = message.args[2].slice(2)}
                    if (message.args[3].slice(0, 3) == '3. ') {message.args[3] = message.args[3].slice(2)}
                        if (message.args[4].slice(0, 3) == '4. ') {message.args[4] = message.args[4].slice(2)}
                            if (message.args[5].slice(0, 3) == '5. ') {message.args[5] = message.args[5].slice(2)}
                                if (message.args[6].slice(0, 3) == '6. ') {message.args[6] = message.args[6].slice(2)}
                                    if (message.args[7].slice(0, 3) == '7. ') {message.args[7] = message.args[7].slice(2)}
                                        if (message.args[8].slice(0, 3) == '8. ') {message.args[8] = message.args[8].slice(2)}
                                            if (message.args[9].slice(0, 3) == '9. ') {message.args[9] = message.args[9].slice(2)}
    if (message.user.admreg !== true) return bot(`–Ω–µ –ø–æ–Ω–∏–º–∞—é –í–∞—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã reg –Ω–∞—á–∞—Ç—å.`)
        if (num == 0){return bot(`–≤—Å–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.`)}
        let user = users.find(x=> x.uid === Number(message.args[1]));
        if ((user.employee1 !== true) && (check == 1)){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –Ω–∞ ${check} —Å–µ—Ä–≤–µ—Ä–µ`)} 
            if ((user.employee2 !== true) && (check == 2)){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –Ω–∞ ${check} —Å–µ—Ä–≤–µ—Ä–µ`)} 
                if ((user.employee3 !== true) && (check == 3)){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –Ω–∞ ${check} —Å–µ—Ä–≤–µ—Ä–µ`)} 
                    if ((user.employee4 !== true) && (check == 4)){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –Ω–∞ ${check} —Å–µ—Ä–≤–µ—Ä–µ`)} 
                        if ((user.employee5 !== true) && (check== 5)){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –Ω–∞ ${check} —Å–µ—Ä–≤–µ—Ä–µ`)} 
                            if ((user.employee6 !== true) && (check == 6)){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –Ω–∞ ${check} —Å–µ—Ä–≤–µ—Ä–µ`)} 
                                if ((user.employee7 !== true) && (check == 7)){return bot(`–¥–∞–Ω–Ω—ã–π UID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –Ω–∞ ${check} —Å–µ—Ä–≤–µ—Ä–µ`)} 
        var id = user.uid;
        if ((Number(user.registeredauto) + num) > 10) return bot('–Ω–∞ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–Ω–æ –∑–∞–≤–µ—Å—Ç–∏ –Ω–µ –±–æ–ª—å—à–µ —á–µ–º 10 –º–∞—à–∏–Ω')
            if (message.args[1].slice(-1) == ' ') {message.args[1] = message.args[1].slice(0,message.args[1].length-1)}
                if (message.args[2].slice(-1) == ' ') {message.args[2] = message.args[2].slice(0, message.args[2].length-1)}
                    if (message.args[3].slice(-1) == ' ') {message.args[3] = message.args[3].slice(0, message.args[3].length-1)}
                        if (message.args[4].slice(-1) == ' ') {message.args[4] = message.args[4].slice(0, message.args[4].length-1)}
                            if (message.args[5].slice(-1) == ' ') {message.args[5] = message.args[5].slice(0, message.args[5].length-1)}
                                if (message.args[6].slice(-1) == ' ') {message.args[6] = message.args[6].slice(0, message.args[6].length-1)}
                                    if (message.args[7].slice(-1) == ' ') {message.args[7] = message.args[7].slice(0, message.args[7].length-1)}
                                        if (message.args[8].slice(-1) == ' ') {message.args[8] = message.args[8].slice(0, message.args[8].length-1)}
                                            if (message.args[9].slice(-1) == ' ') {message.args[9] = message.args[9].slice(0, message.args[9].length-1)}
        await bot(`–í—ã –≤–≤–µ–ª–∏:
        1. UID - [${message.args[1]}], 
        2. photo_id - [${message.args[2]}], 
        3. –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–≤—Ç–æ - [${message.args[3]}], 
        4. –∑–∞–ª–æ–≥ - [${message.args[4]}],
        5. –¶–µ–Ω–∞ 30–º - [${message.args[5]}],
        6. –¶–µ–Ω–∞ 1—á - [${message.args[6]}],
        7. –¶–µ–Ω–∞ 2—á - [${message.args[7]}],
        8. –¶–µ–Ω–∞ 1 –¥–µ–Ω—å - [${message.args[8]}],
        9. –¶–µ–Ω–∞ 1 –Ω–µ–¥–µ–ª—è - [${message.args[9]}],
        –æ–ø–∏—Å–∞–Ω–∏–µ - [–∑–∞–ª–æ–≥ ${message.args[4]}, 30–º–∏–Ω ${message.args[5]}, 1—á ${message.args[6]}, 2—á ${message.args[7]}, 1–¥ ${message.args[8]}, 1–Ω–µ–¥ ${message.args[9]}]`)
       if (num!==0) await bot (`–∞–≤—Ç–æ–º–æ–±–∏–ª—å ‚Ññ${n} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –û—Å—Ç–∞–ª–æ—Å—å [${num-1}] –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π`)
        num--; n++; user.registeredauto++;
        if (num == 0){
            message.user.admreg = false;
            await bot(`–ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.\n
                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "–û–±–Ω–æ–≤–∏—Ç—å ${id} ${check}" —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤!
                –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –∫–∞–∫–æ–π-—Ç–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤–≤–µ–¥—ë–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–£–¥–∞–ª–∏—Ç—å [car id]"`)
            autos.push({
            person_uid: id,
            uid: autos.length,
            photo_id: `${message.args[2]}`,
            name_auto: `${message.args[3]}`,
            photo_disc: `–∑–∞–ª–æ–≥ ${message.args[4]}, 30–º–∏–Ω ${message.args[5]}, 1—á ${message.args[6]}, 2—á ${message.args[7]}, 1–¥ ${message.args[8]}, 1–Ω–µ–¥ ${message.args[9]}`,
            zalog: `${message.args[4]}`,
            cost30m: `${message.args[5]}`,
            cost1h: `${message.args[6]}`,
            cost2h: `${message.args[7]}`,
            cost1d: `${message.args[8]}`,
            cost1w: `${message.args[9]}`,
            full: false,
            now: true
        }); 
            return;
        }
        if (num == 0) return;
        autos.push({
            person_uid: id,
            uid: autos.length,
            photo_id: `${message.args[2]}`,
            name_auto: `${message.args[3]}`,
            photo_disc: `–∑–∞–ª–æ–≥ ${message.args[4]}, 30–º–∏–Ω ${message.args[5]}, 1—á ${message.args[6]}, 2—á ${message.args[7]}, 1–¥ ${message.args[8]}, 1–Ω–µ–¥ ${message.args[9]}`,
            zalog: `${message.args[4]}`,
            cost30m: `${message.args[5]}`,
            cost1h: `${message.args[6]}`,
            cost2h: `${message.args[7]}`,
            cost1d: `${message.args[8]}`,
            cost1w: `${message.args[9]}`,
            full: false,
            now: true
        }); 
    }); 

});
